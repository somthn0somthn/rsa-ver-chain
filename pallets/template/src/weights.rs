
//! Autogenerated weights for `pallet_rsa_verification_parachain`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 47.0.0
//! DATE: 2025-04-27, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `dev`, CPU: `AMD Ryzen Threadripper 7960X 24-Cores`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: 1024

// Executed Command:
// frame-omni-bencher
// v1
// benchmark
// pallet
// --runtime
// target/release/wbuild/rsa-verification-parachain-runtime/rsa_verification_parachain_runtime.wasm
// --pallet
// pallet-rsa-verification-parachain
// --extrinsic
// 
// --output
// pallets/template/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_rsa_verification_parachain`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_rsa_verification_parachain::WeightInfo for WeightInfo<T> {
	fn validate_string() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 4_376_000 picoseconds.
		Weight::from_parts(4_487_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
	}
	fn verify_rsa_signature_valid() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 640_309_000 picoseconds.
		Weight::from_parts(652_659_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
	}
}
